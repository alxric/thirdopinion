// Code generated by reactGen. DO NOT EDIT.

package main

import "myitcv.io/react"

type LoginElem struct {
	react.Element
}

func buildLogin(cd react.ComponentDef) react.Component {
	return LoginDef{ComponentDef: cd}
}

func buildLoginElem(children ...react.Element) *LoginElem {
	return &LoginElem{
		Element: react.CreateElement(buildLogin, nil, children...),
	}
}

func (l LoginDef) RendersElement() react.Element {
	return l.Render()
}

// SetState is an auto-generated proxy proxy to update the state for the
// Login component.  SetState does not immediately mutate l.State()
// but creates a pending state transition.
func (l LoginDef) SetState(state LoginState) {
	l.ComponentDef.SetState(state)
}

// State is an auto-generated proxy to return the current state in use for the
// render of the Login component
func (l LoginDef) State() LoginState {
	return l.ComponentDef.State().(LoginState)
}

// IsState is an auto-generated definition so that LoginState implements
// the myitcv.io/react.State interface.
func (l LoginState) IsState() {}

var _ react.State = LoginState{}

// GetInitialStateIntf is an auto-generated proxy to GetInitialState
func (l LoginDef) GetInitialStateIntf() react.State {
	return LoginState{}
}

func (l LoginState) EqualsIntf(val react.State) bool {
	return l.Equals(val.(LoginState))
}
